/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main;

import java.awt.Color;
import javax.swing.plaf.basic.BasicProgressBarUI;

/**
 *
 * @author ghaisan
 */
public class SplashScreen extends javax.swing.JFrame {
    

    /**
     * Creates new form SplashScreen
     */
    public SplashScreen() {
        initComponents();
        setExtendedState(MAXIMIZED_BOTH);
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        ICON = new javax.swing.JLabel();
        pgbar = new javax.swing.JProgressBar();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentMoved(java.awt.event.ComponentEvent evt) {
                jPanel1ComponentMoved(evt);
            }
        });
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ICON.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ICON.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/logo.png"))); // NOI18N
        ICON.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        ICON.setAlignmentY(10.0F);
        ICON.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        ICON.setSize(600,200);//Setting size of the image
        jPanel1.add(ICON, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 90, 308, 343));

        pgbar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        pgbar.setStringPainted(true);
        pgbar.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                pgbarPropertyChange(evt);
            }
        });
        jPanel1.add(pgbar, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 450, 393, 37));
        pgbar.getAccessibleContext().setAccessibleDescription("");

        jLabel1.setBackground(new java.awt.Color(102, 102, 102));
        jLabel1.setOpaque(true);
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1480, 710));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jPanel1ComponentMoved(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel1ComponentMoved
        // TODO add your handling code here:
        setLocationRelativeTo(null);
    }//GEN-LAST:event_jPanel1ComponentMoved

    private void pgbarPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_pgbarPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_pgbarPropertyChange

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
         
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SplashScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SplashScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SplashScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SplashScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        
        
        /* Create and display the form */
        SplashScreen sc = new SplashScreen();
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                sc.setVisible(true);
            }
        });
        try {
             for(int x = 0; x <=100; x++)
        {
        Thread.sleep(80);
        sc.pgbar.setValue(x);
    
        }
        } catch (Exception e) {
        }
        
        Home hm = new Home();
        
        sc.setVisible(false);
        hm.setVisible(true);
        
        sc.dispose();
        
        sc.pgbar.setForeground(new Color(101, 225, 247)); 

        //this changes textcolor
        sc.pgbar.setUI(new BasicProgressBarUI() {
                        protected Color getSelectionBackground() { return Color.black; }
                        protected Color getSelectionForeground() { return Color.white; }
                    });
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ICON;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JProgressBar pgbar;
    // End of variables declaration//GEN-END:variables
}
